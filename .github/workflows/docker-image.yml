name: Build and Push Docker Image

on:
  workflow_dispatch:
  repository_dispatch:
    types: [upstream-synced-and-merged]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- NEW STEP: Regenerate pnpm-lock.yaml if necessary ---
      - name: Setup Node.js and pnpm (consistent version)
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Match your Dockerfile's Node version
          cache: 'pnpm'

      - name: Regenerate pnpm-lock.yaml (if config mismatch)
        run: |
          echo "Checking pnpm lockfile configuration..."
          # Attempt a frozen install first to see if it fails due to config mismatch
          # If it fails, regenerate the lockfile
          if ! pnpm install --frozen-lockfile; then
            echo "pnpm lockfile configuration mismatch detected. Regenerating lockfile..."
            pnpm install --no-frozen-lockfile
            # Only commit if there are changes
            if git diff --exit-code pnpm-lock.yaml; then
              echo "No changes to pnpm-lock.yaml after regeneration."
            else
              echo "pnpm-lock.yaml updated. Committing changes..."
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add pnpm-lock.yaml
              git commit -m "chore(pnpm): Auto-regenerate pnpm-lock.yaml for CI consistency"
              # Push the updated lockfile. This might trigger another workflow run,
              # but it's a necessary step to keep the lockfile accurate.
              git push origin main
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Default token has push permissions

      # --- Existing Docker build steps follow ---
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        # Use Docker Build Action for better integration and caching
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stremify-app:latest
          cache-from: type=gha # Use GitHub Actions cache for Docker layers
          cache-to: type=gha,mode=max
          # Add build-args if your Dockerfile uses them
          # build-args: |
          #   NODE_VERSION=20
