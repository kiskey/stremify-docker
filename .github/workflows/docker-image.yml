name: Build and Push Docker Image

on:
  workflow_dispatch:
  repository_dispatch:
    types: [upstream-synced-and-merged]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm globally and ensure PATH
        run: |
          npm install -g pnpm@7.33.5
          echo "Verifying pnpm installation..."
          pnpm --version
          echo "PATH: $PATH"

      - name: Cache pnpm global installation
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-global-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-global-

      - name: Regenerate pnpm-lock.yaml (if config mismatch)
        run: |
          echo "Checking pnpm lockfile configuration..."
          if ! pnpm install --frozen-lockfile; then
            echo "pnpm lockfile configuration mismatch detected. Regenerating lockfile..."
            pnpm install --no-frozen-lockfile
            if git diff --exit-code pnpm-lock.yaml; then
              echo "No changes to pnpm-lock.yaml after regeneration."
            else
              echo "pnpm-lock.yaml updated. Committing changes..."
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add pnpm-lock.yaml
              git commit -m "chore(pnpm): Auto-regenerate pnpm-lock.yaml for CI consistency [skip ci]"
              git push origin main
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- CRITICAL CHANGE: Explicitly create and use a new builder ---
      - name: Create and Set up Docker Buildx Builder
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container # Explicitly set the driver
          # Name the builder explicitly if you want, otherwise 'default' is fine
          # builder: my-custom-builder

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stremify-app:latest
          # Reference the builder created in the previous step
          builder: ${{ steps.buildx.outputs.name }} # Use the output name of the created builder
          cache-from: type=gha,scope=docker-build-${{ github.sha }}
          cache-to: type=gha,mode=max,scope=docker-build-${{ github.sha }}
