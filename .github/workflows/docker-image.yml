name: Build and Push Docker Image

on:
  workflow_dispatch:
  repository_dispatch:
    types: [upstream-synced-and-merged]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Match your Dockerfile's Node version
          # Remove 'cache: pnpm' here, as we'll handle pnpm installation and caching explicitly
          # It seems the 'cache: pnpm' input might not reliably install pnpm itself,
          # but rather just configure caching for *when* pnpm is later used.

      # --- CRITICAL NEW STEP: Explicitly install pnpm and ensure it's in PATH ---
      - name: Install pnpm globally and ensure PATH
        run: |
          npm install -g pnpm@7.33.5
          echo "Verifying pnpm installation..."
          pnpm --version
          echo "PATH: $PATH" # Debugging: Print PATH to see where pnpm should be
        # Add a custom cache for pnpm global installations if you want to optimize
        # This will cache the globally installed pnpm, not your project's node_modules
      - name: Cache pnpm global installation
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store # Adjust if pnpm global store path is different
          key: ${{ runner.os }}-pnpm-global-${{ hashFiles('package.json') }} # Key based on OS and package.json to bust cache if needed
          restore-keys: |
            ${{ runner.os }}-pnpm-global-

      - name: Regenerate pnpm-lock.yaml (if config mismatch)
        run: |
          echo "Checking pnpm lockfile configuration..."
          # This command now *should* find pnpm
          if ! pnpm install --frozen-lockfile; then
            echo "pnpm lockfile configuration mismatch detected. Regenerating lockfile..."
            pnpm install --no-frozen-lockfile
            if git diff --exit-code pnpm-lock.yaml; then
              echo "No changes to pnpm-lock.yaml after regeneration."
            else
              echo "pnpm-lock.yaml updated. Committing changes..."
              git config user.name "github-actions[bot]"
              git config user.email "github-actions[bot]@users.noreply.github.com"
              git add pnpm-lock.yaml
              git commit -m "chore(pnpm): Auto-regenerate pnpm-lock.yaml for CI consistency [skip ci]"
              git push origin main
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/stremify-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
