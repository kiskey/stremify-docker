# .github/workflows/sync-upstream.yml
name: Sync Upstream Repository

on:
  schedule:
    - cron: "0 6 * * *" # Runs daily at 6:00 AM UTC
  workflow_dispatch: # Allows manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote if it doesn't exist
        run: |
          git remote add upstream https://github.com/stremify/stremify.git || echo "Upstream remote already exists or cannot be added"

      - name: Fetch upstream changes
        run: |
          git fetch upstream

      - name: Check for changes and merge
        id: merge_check # Assign an ID to this step to reference its outputs
        run: |
          git checkout main
          # Check if upstream/main is ahead of main
          if git diff --quiet main upstream/main; then
            echo "No new changes detected in upstream/main. Main is already up-to-date or ahead."
            echo 'merged=false' >> "$GITHUB_OUTPUT" # Use $GITHUB_OUTPUT for setting outputs
          else
            echo "New changes detected in upstream/main. Merging..."
            # Attempt to merge. --no-ff ensures a merge commit, even for fast-forwards.
            git merge --no-ff upstream/main
            echo "Merge completed."
            echo 'merged=true' >> "$GITHUB_OUTPUT" # Use $GITHUB_OUTPUT for setting outputs
          fi

      - name: Push changes to fork
        if: steps.merge_check.outputs.merged == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Set the origin URL with the token for authentication
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/kiskey/stremify-docker.git
          git push origin main
          echo "Changes pushed to your fork."

      - name: Dispatch Docker Build Workflow
        if: steps.merge_check.outputs.merged == 'true' # Only dispatch if a merge actually happened
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_FOR_WORKFLOW_DISPATCH }} # This MUST be a PAT with 'workflow' scope.
          event-type: upstream-synced-and-merged # This is the custom event name your build workflow will listen for
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}' # Optional: Pass some context
